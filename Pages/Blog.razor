@page "/blog"
@using Models
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<BlogContext> CtxFactory;

<PageTitle>Blog</PageTitle>

<h3>Blog</h3>

<input type="text" placeholder="Title" @bind="title" />
<input type="text" placeholder="Content" @bind="content" />
<button @onclick="AddEntryAsync">Add Entry</button>

@foreach (var entry in blog)
{
    <article class="blog-entry">
        <h4>@((MarkupString)entry.Title)</h4>
        <h5>@entry.TimePosted</h5>
        <div class="blog-entry-content">@((MarkupString)entry.Content)</div>
    </article>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        using var ctx = await CtxFactory.CreateDbContextAsync();

        if (ctx.Blog != null)
        {
            blog.AddRange(
            await ctx.Blog.OrderByDescending(be => be.TimePosted).ToListAsync()
            );
        }
    }

    private List<BlogEntry> blog = new List<BlogEntry>();
    private string? title, content;

    private async void AddEntryAsync()
    {
        if (!string.IsNullOrWhiteSpace(title) && !string.IsNullOrEmpty(content))
        {
            var be = new BlogEntry { Title = title, Content = content, TimePosted = DateTime.Now };

            using var ctx = await CtxFactory.CreateDbContextAsync();
            if (ctx.Blog != null)
            {
                await ctx.Blog.AddAsync(be);
                if (await ctx.SaveChangesAsync() > 0)
                {
                    blog.Add(be);

                    blog.Sort();
                    title = "";
                    content = string.Empty;
                }
            }
        }
    }
}
